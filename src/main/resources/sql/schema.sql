drop table if exists attachment;
drop table if exists comment;
drop table if exists ticket;
drop table if exists user_roles;
drop table if exists users;

create table if not exists ticket (
    id bigint generated by default as identity,
    body varchar(255),  name varchar(255),
    subject varchar(255),
    create_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    update_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    primary key (id)
);
create table if not exists attachment (
    id uuid default random_uuid() not null,
    content blob, content_type varchar(255),
    filename varchar(255), ticket_id bigint,
    create_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    update_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    primary key (id), foreign key (ticket_id) references ticket
);
CREATE TABLE if not exists users (
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL,
    emailaddr VARCHAR(50) NOT NULL,
    discription VARCHAR(255),
    create_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    update_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY (username)
);
CREATE TABLE IF NOT EXISTS user_roles (
    user_role_id INTEGER GENERATED ALWAYS AS IDENTITY,
    username VARCHAR(50) NOT NULL,
    role VARCHAR(50) NOT NULL,
    create_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    update_time timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY (user_role_id),
    FOREIGN KEY (username) REFERENCES users(username)
);

create table if not exists comment (
    id bigint generated by default as identity,
    content varchar(255),
    create_time timestamp(6),
    ticket_id bigint,
    update_time timestamp(6),
    username varchar(255),
    primary key (id),
    foreign key (ticket_id) references ticket,
    foreign key (username) references users
);

